spool Audit_Framework.log
DROP TABLE T_ADT_TASK_RUN_LOG CASCADE CONSTRAINTS PURGE;
DROP TABLE T_ADT_PRCS_CNTRL CASCADE CONSTRAINTS PURGE;
DROP TABLE T_ADT_WRKFLW_CNTRL_LOG CASCADE CONSTRAINTS PURGE;
DROP TABLE T_ADT_BTCH_CNTRL_LOG CASCADE CONSTRAINTS PURGE;
DROP TABLE T_ADT_STTS_CD CASCADE CONSTRAINTS PURGE;
DROP TABLE T_ADT_DPNDNCY_CNTRL CASCADE CONSTRAINTS PURGE;
DROP TABLE T_ADT_SRC_SSTM CASCADE CONSTRAINTS PURGE;

CREATE TABLE T_ADT_BTCH_CNTRL_LOG
(
	BTCH_ID               INTEGER  NOT NULL ,
	BTCH_STRT_TM          TIMESTAMP(4)  NOT NULL ,
	BTCH_END_TM           TIMESTAMP(4)  NULL ,
	BTCH_DRTN             DECIMAL(10)  NULL ,
	BTCH_STTS_CD          INTEGER  NULL ,
	BTCH_NM               VARCHAR2(4)  NULL 
);
CREATE UNIQUE INDEX XPKAudit_Batch_Control_Log ON T_ADT_BTCH_CNTRL_LOG (BTCH_ID  ASC);
ALTER TABLE T_ADT_BTCH_CNTRL_LOG
	ADD CONSTRAINT  XPKAudit_Batch_Control_Log PRIMARY KEY (BTCH_ID);

CREATE INDEX XIF1Audit_Batch_Control_Log ON T_ADT_BTCH_CNTRL_LOG
(BTCH_STTS_CD  ASC);

CREATE INDEX XIF2Audit_Batch_Control_Log ON T_ADT_BTCH_CNTRL_LOG
(BTCH_NM  ASC);

CREATE SEQUENCE SEQ_ADT_BTCH_CNTRL_LOG 
START WITH 1 
NOMAXVALUE 
NOCYCLE
NOCACHE;

CREATE OR REPLACE TRIGGER TRIG_ADT_BTCH_CNTRL_LOG
BEFORE INSERT ON T_ADT_BTCH_CNTRL_LOG
FOR EACH ROW 
BEGIN
SELECT SEQ_ADT_BTCH_CNTRL_LOG.NEXTVAL INTO :NEW.BTCH_ID FROM DUAL;
END;
/


CREATE TABLE T_ADT_DPNDNCY_CNTRL
(
	DPNDNT_ID             INTEGER  NOT NULL ,
	WRKFLW_NM             VARCHAR2(100)  NULL ,
	DPNDNT_WRKFLW_NM      VARCHAR2(100)  NULL ,
	SRC_SSTM_CD           VARCHAR2(4)  NOT NULL 
);
CREATE UNIQUE INDEX XPKAudit_Dependency_Control ON T_ADT_DPNDNCY_CNTRL
(DPNDNT_ID  ASC);
ALTER TABLE T_ADT_DPNDNCY_CNTRL
	ADD CONSTRAINT  XPKAudit_Dependency_Control PRIMARY KEY (DPNDNT_ID);

CREATE INDEX XIF1Audit_Dependency_Control ON T_ADT_DPNDNCY_CNTRL
(SRC_SSTM_CD  ASC);

CREATE SEQUENCE SEQ_ADT_DPNDNCY_CNTRL 
START WITH 1 
NOMAXVALUE 
NOCYCLE
NOCACHE
ORDER;

CREATE TRIGGER TRIG_ADT_DPNDNCY_CNTRL
BEFORE INSERT ON T_ADT_DPNDNCY_CNTRL
FOR EACH ROW
BEGIN
SELECT SEQ_ADT_DPNDNCY_CNTRL.NEXTVAL INTO :NEW.DPNDNT_ID FROM DUAL;
END;
/

CREATE TABLE T_ADT_PRCS_CNTRL
(
	PRCS_ID               INTEGER  NOT NULL ,
	SESSN_NM              VARCHAR2(100)  NULL ,
	WRKFLW_NM             VARCHAR2(100)  NULL ,
	MAPPING_NM            VARCHAR2(100)  NULL ,
	DATA_LOAD_PHASE       VARCHAR2(50)  NULL ,
	FLDR_NM               VARCHAR2(20)  NULL 
);

CREATE UNIQUE INDEX XPKAudit_Process_Control ON T_ADT_PRCS_CNTRL
(PRCS_ID  ASC);
ALTER TABLE T_ADT_PRCS_CNTRL
	ADD CONSTRAINT  XPKAudit_Process_Control PRIMARY KEY (PRCS_ID);
	
CREATE SEQUENCE SEQ_ADT_PRCS_CNTRL
START WITH 1 
NOMAXVALUE 
NOCYCLE
NOCACHE
ORDER;

CREATE OR REPLACE TRIGGER TRIG_ADT_PRCS_CNTRL
BEFORE INSERT ON T_ADT_PRCS_CNTRL
FOR EACH ROW
BEGIN 
SELECT SEQ_ADT_PRCS_CNTRL.NEXTVAL INTO :NEW.PRCS_ID FROM DUAL;
END;
/

CREATE TABLE T_ADT_SRC_SSTM
(
	SRC_SSTM_LBL_TXT      VARCHAR2(20)  NULL ,
	SRC_SSTM_ID           INTEGER  NOT NULL ,
	SRC_SSTM_DESC_TXT     VARCHAR2(254)  NOT NULL ,
	SRC_SSTM_CD           VARCHAR2(4)  NOT NULL 
);
CREATE UNIQUE INDEX XPKAudit_Source_System ON T_ADT_SRC_SSTM
(SRC_SSTM_CD  ASC);
ALTER TABLE T_ADT_SRC_SSTM
	ADD CONSTRAINT  XPKAudit_Source_System PRIMARY KEY (SRC_SSTM_CD);

CREATE SEQUENCE SEQ_ADT_SRC_SSTM 
START WITH 1 
NOMAXVALUE 
NOCYCLE
NOCACHE
ORDER;

CREATE OR REPLACE TRIGGER TRIG_ADT_SRC_SSTM
BEFORE INSERT ON T_ADT_SRC_SSTM
FOR EACH ROW
BEGIN 
SELECT SEQ_ADT_SRC_SSTM.NEXTVAL INTO :NEW.SRC_SSTM_ID FROM DUAL;
END;
/

CREATE TABLE T_ADT_STTS_CD
(
	STTS_CD               INTEGER  NOT NULL ,
	STTS_CD_DESC          VARCHAR2(50)  NOT NULL 
);
CREATE UNIQUE INDEX XPKAudit_Status_Code ON T_ADT_STTS_CD
(STTS_CD  ASC);
ALTER TABLE T_ADT_STTS_CD
	ADD CONSTRAINT  XPKAudit_Status_Code PRIMARY KEY (STTS_CD);

/*Static metadata to be inserted into T_ADT_STTS_CD table.*/

insert into t_adt_stts_cd values(1,'Aborted');
insert into t_adt_stts_cd values(2,'Aborting');
insert into t_adt_stts_cd values(3,'Disabled');
insert into t_adt_stts_cd values(4,'Failed');
insert into t_adt_stts_cd values(5,'Preparing to Run');
insert into t_adt_stts_cd values(6,'Running');
insert into t_adt_stts_cd values(7,'Scheduled');
insert into t_adt_stts_cd values(8,'Stopped');
insert into t_adt_stts_cd values(9,'Stopping');
insert into t_adt_stts_cd values(10,'Succeeded');
insert into t_adt_stts_cd values(11,'Suspended');
insert into t_adt_stts_cd values(12,'Suspending');
insert into t_adt_stts_cd values(13,'Terminated');
insert into t_adt_stts_cd values(14,'Terminating');
insert into t_adt_stts_cd values(15,'Unknown Status');
insert into t_adt_stts_cd values(16,'Unscheduled');
insert into t_adt_stts_cd values(17,'Waiting');


//CREATE SEQUENCE SEQ_ADT_STTS_CD 
//START WITH 1 
//NOMAXVALUE 
//NOCYCLE
//NOCACHE
//ORDER;
//
//CREATE OR REPLACE TRIGGER TRIG_ADT_STTS_CD
//BEFORE INSERT ON T_ADT_STTS_CD
//FOR EACH ROW
//BEGIN 
//SELECT SEQ_ADT_STTS_CD.NEXTVAL INTO :NEW.STTS_CD FROM DUAL;
//END;
///

CREATE TABLE T_ADT_TASK_RUN_LOG
(
	TASK_RUN_ID           INTEGER  NOT NULL ,
	PRCS_ID               INTEGER  NOT NULL ,
	TASK_STRT_TM          DATE  NOT NULL ,
	TASK_END_TM           DATE  NULL ,
	TASK_STTS_CD          INTEGER  NOT NULL ,
	TASK_DRTN           INTEGER  NULL ,
	WRKFLW_RUN_ID         INTEGER  NOT NULL 
);
CREATE UNIQUE INDEX XPKAudit_Task_Run_Log ON T_ADT_TASK_RUN_LOG
(TASK_RUN_ID  ASC);
ALTER TABLE T_ADT_TASK_RUN_LOG
	ADD CONSTRAINT  XPKAudit_Task_Run_Log PRIMARY KEY (TASK_RUN_ID);
CREATE INDEX XIF1Audit_Task_Run_Log ON T_ADT_TASK_RUN_LOG
(WRKFLW_RUN_ID  ASC);

CREATE INDEX XIF2Audit_Task_Run_Log ON T_ADT_TASK_RUN_LOG
(TASK_STTS_CD  ASC);

CREATE INDEX XIF3Audit_Task_Run_Log ON T_ADT_TASK_RUN_LOG
(PRCS_ID  ASC);

CREATE SEQUENCE SEQ_ADT_TASK_RUN_LOG
START WITH 1 
NOMAXVALUE 
NOCYCLE
NOCACHE;

CREATE OR REPLACE TRIGGER TRIG_ADT_TASK_RUN_LOG
BEFORE INSERT ON T_ADT_TASK_RUN_LOG
FOR EACH ROW
BEGIN 
SELECT SEQ_ADT_TASK_RUN_LOG.NEXTVAL INTO :NEW.TASK_RUN_ID FROM DUAL;
END;
/

CREATE TABLE T_ADT_WRKFLW_CNTRL_LOG
(
	BTCH_ID               INTEGER  NOT NULL ,
	WRKFLW_STTS_CD        INTEGER  NOT NULL ,
	WRKFLW_STRT_TM        DATE  NOT NULL ,
	WRKFLW_END_TM         DATE  NULL ,
	WRKFLW_DRTN           INTEGER  NULL ,
	WRKFLW_NM             VARCHAR2(50)  NULL ,
	WRKFLW_RUN_ID         INTEGER  NOT NULL 
);

CREATE UNIQUE INDEX XPKAudit_Workflow_Control_Log ON T_ADT_WRKFLW_CNTRL_LOG
(WRKFLW_RUN_ID  ASC);

ALTER TABLE T_ADT_WRKFLW_CNTRL_LOG
	ADD CONSTRAINT  XPKAudit_Workflow_Control_Log PRIMARY KEY (WRKFLW_RUN_ID);

CREATE INDEX XIF1Audit_Workflow_Control_Log ON T_ADT_WRKFLW_CNTRL_LOG
(WRKFLW_STTS_CD  ASC);

CREATE INDEX XIF2Audit_Workflow_Control_Log ON T_ADT_WRKFLW_CNTRL_LOG
(BTCH_ID  ASC);

CREATE SEQUENCE SEQ_ADT_WFLOW_CNTRL_LOG
START WITH 1 
NOMAXVALUE 
NOCYCLE
NOCACHE;

CREATE OR REPLACE TRIGGER TRIG_ADT_WFLOW_CNTRL_LOG
BEFORE INSERT ON T_ADT_WRKFLW_CNTRL_LOG
FOR EACH ROW
BEGIN 
SELECT SEQ_ADT_WFLOW_CNTRL_LOG.NEXTVAL INTO :NEW.WRKFLW_RUN_ID FROM DUAL;
END;
/

ALTER TABLE T_ADT_BTCH_CNTRL_LOG
	ADD (CONSTRAINT  R_9 FOREIGN KEY (BTCH_STTS_CD) REFERENCES T_ADT_STTS_CD(STTS_CD) ON DELETE SET NULL);

ALTER TABLE T_ADT_BTCH_CNTRL_LOG
	ADD (CONSTRAINT  R_14 FOREIGN KEY (BTCH_NM) REFERENCES T_ADT_SRC_SSTM(SRC_SSTM_CD) ON DELETE SET NULL);

ALTER TABLE T_ADT_DPNDNCY_CNTRL
	ADD (CONSTRAINT  R_13 FOREIGN KEY (SRC_SSTM_CD) REFERENCES T_ADT_SRC_SSTM(SRC_SSTM_CD) ON DELETE SET NULL);

ALTER TABLE T_ADT_TASK_RUN_LOG
	ADD (CONSTRAINT  R_3 FOREIGN KEY (WRKFLW_RUN_ID) REFERENCES T_ADT_WRKFLW_CNTRL_LOG(WRKFLW_RUN_ID));

ALTER TABLE T_ADT_TASK_RUN_LOG
	ADD (CONSTRAINT  R_6 FOREIGN KEY (TASK_STTS_CD) REFERENCES T_ADT_STTS_CD(STTS_CD));

ALTER TABLE T_ADT_TASK_RUN_LOG
	ADD (CONSTRAINT  R_10 FOREIGN KEY (PRCS_ID) REFERENCES T_ADT_PRCS_CNTRL(PRCS_ID));

ALTER TABLE T_ADT_WRKFLW_CNTRL_LOG
	ADD (CONSTRAINT  R_4 FOREIGN KEY (WRKFLW_STTS_CD) REFERENCES T_ADT_STTS_CD(STTS_CD));

ALTER TABLE T_ADT_WRKFLW_CNTRL_LOG
	ADD (CONSTRAINT  R_11 FOREIGN KEY (BTCH_ID) REFERENCES T_ADT_BTCH_CNTRL_LOG(BTCH_ID) ON DELETE SET NULL);


spool off
